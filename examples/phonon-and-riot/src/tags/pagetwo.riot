<pagetwo>
  <div class="app-page" data-page="true" data-alias="pagetwo">
    <header class="header-bar">
      <div class="left">
        <button class="btn pull-left icon icon-arrow-back" data-navigation="$previous-page"></button>
        <h1 class="title">Page Two</h1>
      </div>
    </header>

    <div class="content">
      <div class="padded-full">
        <h2>Order</h2>

        <p>1x Pizza: {pizza}</p>

        <button class="btn negative cancel" data-order="cancel" onclick={onAction}>Cancel</button>
        <button class="btn btn-flat primary order" data-order="order" onclick={onAction}>Order</button>
      </div>
    </div>

    <script>
      import phonon from 'phonon/dist/js/phonon-core';
      import dialogs from '../../../../dist/js/components/dialogs';

      const { alert } = dialogs();

      /**
        * On this page, we define the activity events directly on the tag object with "this"
        * [1] On the create callback, we add tap events on buttons. The OnCreate callback is called once.
        * [2] If the user does not tap on buttons, we cancel the page transition. preventClose => true
        * [3] The OnReady callback is called every time the user comes on this page,
        * here we did not implement it.
      */
      export default {
        state: {
          pizza: null,
          action: null,
        },
        onAction(evt) {
          const target = evt.target;
          this.state.action = 'ok';

          if (target.getAttribute('data-order') === 'order') {
            alert('Thank you for your order!', 'Dear customer');
          } else {
            alert('Your order has been canceled.', 'Dear customer');
          }
        },
        onMounted() {
          // Add Phonon triggers
          phonon.navigator().onPage('pagetwo').addEvent('close', this.onClose);
          phonon.navigator().onPage('pagetwo').addEvent('hidden', this.onHidden);
          phonon.navigator().onPage('pagetwo').addEvent('hashchanged', this.onHashChanged);
        },
        onClose(self) {
          if (this.state.action !== null) {
            self.close();
          } else {
            alert('Before leaving this page, you must perform an action.', 'Action required');
          }
        },
        onHidden() {
          this.state.action = null;
        },
        onHashChanged(pizza) {
          this.state.pizza = pizza;
        },
      };
    </script>
  </div>
</pagetwo>
